<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.flowers.shopping.mapper.OrderMapper">

    <!-- 插入订单 -->
    <insert id="add" parameterType="com.flowers.shopping.entity.Order" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO orders (
            user_id,
            address_id,
            total_amount,
            status,
            payment_method,
            created_at,
            updated_at
        ) VALUES (
                     #{userId},
                     #{addressId},
                     #{totalAmount},
                     #{status},
                     #{paymentMethod},
                     #{createdAt},
                     #{updatedAt}
                 )
    </insert>

    <!-- 根据用户ID查询订单及地址信息 -->
    <select id="selectByUserId" parameterType="com.flowers.shopping.entity.OrderQueryParam" resultMap="OrderDTOMap">
        SELECT
            *
        FROM
            orders o
                LEFT JOIN
            addresses a ON o.address_id = a.id
        WHERE
            o.user_id = #{userId}
        ORDER BY
            o.created_at DESC
    </select>

    <!-- 查询订单项 -->
    <select id="selectOrderItemsByOrderId" resultType="com.flowers.shopping.entity.OrderItem">
        SELECT
            *
        FROM
            order_items
        WHERE
            order_id = #{orderId}
    </select>

    <resultMap id="OrderDTOMap" type="com.flowers.shopping.entity.OrderDTO">
        <association property="order" javaType="com.flowers.shopping.entity.Order">
            <id property="id" column="id" />
            <result property="userId" column="user_id" />
            <result property="addressId" column="address_id" />
            <result property="totalAmount" column="total_amount" />
            <result property="status" column="status" />
            <result property="paymentMethod" column="payment_method" />
            <result property="createdAt" column="created_at" />
            <result property="updatedAt" column="updated_at" />
        </association>
        <association property="address" javaType="com.flowers.shopping.entity.Address">
            <id property="id" column="address_id" />
            <result property="userId" column="user_id" />
            <result property="receiver" column="receiver" />
            <result property="phone" column="phone" />
            <result property="province" column="province" />
            <result property="city" column="city" />
            <result property="district" column="district" />
            <result property="detailAddress" column="detail_address" />
            <result property="isDefault" column="is_default"/>
            <result property="createdAt" column="created_at" />
            <result property="updatedAt" column="updated_at" />
        </association>
        <collection property="orderItems" column="id" select="selectOrderItemsByOrderId" />
    </resultMap>

    <resultMap id="OrderResultMap" type="com.flowers.shopping.entity.Order">
        <id property="id" column="id" />
        <result property="userId" column="user_id" />
        <result property="addressId" column="address_id" />
        <result property="totalAmount" column="total_amount" />
        <result property="status" column="status" />
        <result property="paymentMethod" column="payment_method" />
        <result property="createdAt" column="created_at" />
        <result property="updatedAt" column="updated_at" />
        <collection property="orderItems" ofType="com.flowers.shopping.entity.OrderItem">
            <id property="id" column="order_item_id" />
            <result property="orderId" column="order_id" />
            <result property="productId" column="product_id" />
            <result property="productName" column="product_name" />
            <result property="price" column="price" />
            <result property="quantity" column="quantity" />
            <result property="subtotal" column="subtotal" />
        </collection>
    </resultMap>

    <select id="selectById" resultMap="OrderResultMap">
        SELECT
            o.id,
            o.user_id,
            o.address_id,
            o.total_amount,
            o.status,
            o.payment_method,
            o.created_at,
            o.updated_at,
            oi.id AS order_item_id,
            oi.order_id,
            oi.product_id,
            oi.product_name,
            oi.price,
            oi.quantity,
            oi.subtotal
        FROM
            orders o
                LEFT JOIN
            order_items oi ON o.id = oi.order_id
        WHERE
            o.id = #{id}
    </select>

    <!-- 更新订单信息 -->
    <update id="updateOrder">
        UPDATE orders
        SET
        user_id = #{userId},
        address_id = #{addressId},
        total_amount = #{totalAmount},
        status = #{status},
        payment_method = #{paymentMethod},
        updated_at = NOW()
        WHERE id = #{id}
    </update>

    <!-- 删除订单项 -->
    <delete id="deleteOrderItemsByOrderId">
        DELETE FROM order_items
        WHERE order_id = #{orderId}
    </delete>

    <!-- 批量插入订单项 -->
    <insert id="insertOrderItems">
        INSERT INTO order_items (
        order_id,
        product_id,
        product_name,
        price,
        quantity,
        subtotal
        ) VALUES
        <foreach collection="orderItems" item="item" separator=",">
            (
            #{item.orderId},
            #{item.productId},
            #{item.productName},
            #{item.price},
            #{item.quantity},
            #{item.subtotal}
            )
        </foreach>
    </insert>

    <!-- 根据订单ID删除订单 -->
    <delete id="deleteOrderById">
        DELETE FROM orders
        WHERE id = #{id}
    </delete>


</mapper>